# J.A.R.V.I.S :- Just A Rather Very Intelligent System

import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import requests

engine = pyttsx3.init("sapi5")
voices = engine.getProperty('voices')
print(voices[0].id)
engine.setProperty('voice', voices[0].id)

# Add the function for the device to say something
def speak(audio):
    engine.say(audio)
    engine.runAndWait()

# J.A.R.V.I.S will wish me
def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak("Good Morning")
    elif hour >= 12 and hour < 17:
        speak("Good Afternoon")
    else:
        speak("Good Evening")

    speak("Hello I am Jarvis. What can I help you ?")

# J.A.R.V.I.S will listen and respond to the user's commands
def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening....")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing....")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}")

    except Exception as e:
        print(e)
        print("Say that again please")
        speak("Say that again please")
        print("I cant listen anything. Try to use ChatGPT")
        speak("I cant listen anything. Try to use ChatGPT")
        webbrowser.open("chatgpt.com")
        print("You can talk again later if you need help")
        speak("You can talk again later if you need help")
        return "None"
    return query

if __name__ == "__main__":
    wishMe()
    if 1:
       query = takeCommand().lower()

       # Logic for executing tasks based on query
       if 'wikipedia' in query:
           speak('Searching wikipedia....')
           query = query.replace('wikipedia','  ')
           results = wikipedia.summary(query, sentences=3)
           speak("According to Wikipedia...")
           print(results)
           speak(results)

       elif 'open youtube' in query:
           webbrowser.open('youtube.com')

       elif 'open google' in query:
           webbrowser.open('google.com')

       elif 'play music' in query:
           music_dir = 'C:\\Music'
           songs = os.listdir(music_dir)
           print(songs)
           os.startfile(os.path.join(music_dir, songs[1]))

       elif 'the time' in query:
           strTime = datetime.datetime.now().strftime("%H:%M:%S")
           speak(f"Sir, The time is {strTime}")

       elif 'news' in query:
           r = requests.get('https://newsapi.org/v2/everything?q=icct20wc&from=2024-06-07&sortBy=publishedAt&apiKey=e93e0a16480b4c99967280280b1719f1')

           if r.status_code == 200:
               data = r.json()

               articles = data.get("articles", [])

               for article in articles:
                   speak(article.get('title'))
                   print(article.get('title'))
                   speak(article.get('description'))
                   print(article.get('description'))

    

    
